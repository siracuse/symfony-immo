<?php

namespace BienBundle\Repository;

/**
 * bienRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class bienRepository extends \Doctrine\ORM\EntityRepository
{


    public function getBienWithType()
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.typeBien', 't')
            ->addSelect('t');

        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getBienWithType6E()
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.typeBien', 't')
            ->addSelect('t')
            ->where('b.statutBien = :statut')
            ->setParameter('statut', 'Activé')
            ->setMaxResults(6)
            ->orderBy('b.dateDepotBien', 'DESC');

        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getNbBienVendre()
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->where('b.typeVenteBien = :type')
            ->setParameter('type', 'a vendre');
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getNbBienLouer()
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->where('b.typeVenteBien = :type')
            ->setParameter('type', 'a louer');
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getBienInAgence($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.agences', 'a')
            ->addSelect('a')
            ->where('a = :id')
            ->setParameter('id', $id);
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getBienInAgent($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.agents', 'a')
            ->addSelect('a')
            ->where('a = :id')
            ->setParameter('id', $id);
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getAgentInBien($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.agents', 'a')
            ->addSelect('a')
            ->where('b = :id')
            ->setParameter('id', $id);
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getBienActif()
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->where('b.statutBien = :statut')
            ->setParameter('statut', 'Activé');
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getPrixMin()
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('MIN(b.prixBien) as prixMin')
            ->from('BienBundle\Entity\bien', 'b');

        return $qb->getQuery()->getSingleResult();
    }

    public function getPrixMax()
    {
        $qb = $this->_em->createQueryBuilder()
            ->select('MAX(b.prixBien) as prixMax')
            ->from('BienBundle\Entity\bien', 'b');

        return $qb->getQuery()->getSingleResult();
    }

    public function findAnnonceByParameters($data)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.typeBien', 't')
            ->addSelect('t')
            ->Join('b.adresse', 'a')
            ->addSelect('a')
            ->where('b.statutBien = :statut')
            ->setParameter('statut', 'Activé');

        if ($data['typeVenteBien'] != null) {
            $qb->andWhere('b.typeVenteBien = :typeVenteBien')
                ->setParameter('typeVenteBien', $data['typeVenteBien']);
        }
        if ($data['typeBien'] != null) {
            $qb->andWhere('t = :typeBien')
                ->setParameter('typeBien', $data['typeBien']);
        }
        if ($data['zoneGeo'] != null) {
            $qb->andWhere('a.zoneGeo = :zoneGeo')
                ->setParameter('zoneGeo', $data['zoneGeo']);
        }
        if ($data['surfaceBienMax'] != null) {
            $qb->andWhere('b.surfaceBien <= :surfaceBienMax')
//                    ->setParameters(array(
//                                        'surfaceBienMin' => $data['surfaceBienMin'],
//                                        'surfaceBienMax' => $data['surfaceBienMax']
                ->setParameter('surfaceBienMax', $data['surfaceBienMax']);
        }
        if ($data['prixMax'] != null) {
            $qb->andWhere('b.prixBien <= :prixMax')
                ->setParameter('prixMax', $data['prixMax']);
        }
        if ($data['nbPiece'] != null) {
            $qb->andWhere('b.nbPieceBien = :nbPiece')
                ->setParameter('nbPiece', $data['nbPiece']);
        }
        if ($data['nbChambre'] != null) {
            $qb->andWhere('b.nbChambreBien = :nbChambre')
                ->setParameter('nbChambre', $data['nbChambre']);
        }
        if ($data['nbSalleDeBain'] != null) {
            $qb->andWhere('b.nbSalleDeBainBien = :nbSalleDeBain')
                ->setParameter('nbSalleDeBain', $data['nbSalleDeBain']);
        };
//        if ($data)

        return $qb
            ->getQuery()
            ->getResult();

    }

    public function getBienWithComValider($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->join('b.commentaires', 'c')
            ->addSelect('c')
            ->where('b.id = :id')
            ->andWhere('c.publierCom = :publier')
            ->setParameters(array('publier' => 'Oui', 'id' => $id));
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getBienWithComNonValider($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->join('b.commentaires', 'c')
            ->addSelect('c')
            ->where('b.id = :id')
            ->andWhere('c.publierCom = :publier')
            ->setParameters(array('publier' => 'Non', 'id' => $id));
        return $qb->getQuery()->getOneOrNullResult();
    }

    public function getBienWithTypeBien($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->Join('b.typeBien', 't')
            ->addSelect('t')
            ->where('t = :id')
            ->andWhere('b.statutBien = :statut')
            ->setParameters(array('id' => $id, 'statut' => 'Activé'));
        return $qb
            ->getQuery()
            ->getResult();
    }

    public function getBienWithTypeVenteBien($id)
    {
        $qb = $this
            ->createQueryBuilder('b')
            ->where('b.typeVenteBien = :id')
            ->andWhere('b.statutBien = :statut')
            ->setParameters(array('id' => $id, 'statut' => 'Activé'));
        return $qb
            ->getQuery()
            ->getResult();
    }
}